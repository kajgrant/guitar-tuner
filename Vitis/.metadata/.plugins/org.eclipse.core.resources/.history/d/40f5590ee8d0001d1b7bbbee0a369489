#include "map.h"


void init_map() {
	for (int i = 1; i < 5; i++ ) {
		int C_start[i] = (B[i-1]+C[i])/2;
		int Csharp_start[i] = (C[i]+Csharp[i])/2;
		int D_start[i] = (Csharp[i]+D[i])/2;
		int Dsharp_start[i] = (D[i]+Dsharp[i])/2;
		int E_start[i] = (Dsharp[i]+E[i])/2;
		int F_start[i] = (E[i]+F[i])/2;
		int Fsharp_start[i] = (F[i]+Fsharp[i])/2;
		int G_start[i] = (Fsharp[i]+G[i])/2;
		int Gsharp_start[i] = (G[i]+Gsharp[i])/2;
		int A_start[i] = (Gsharp[i]+A[i])/2;
		int Asharp_start[i] = (A[i]+Asharp[i])/2;
		int B_start[i] = (Asharp[i]+B[i])/2;
		int B_end[i] = (B[i]+C[i+1])/2;
	}
}


char map(int freq) {
	char note;


	for (int i = 1; i < 5; i++ ) {
		if (freq >= C_start[i] && freq < Csharp_start[i]) {
			note = 'c';
		} else if (freq >= Csharp_start[i] && freq < D_start[i]) {
			note = 'l';
		} else if (freq >= D_start[i] && freq < Dsharp_start[i]) {
			note = 'd';
		} else if (freq >= Dsharp_start[i] && freq < E_start[i]) {
			note = 'm';
		} else if (freq >= E_start[i] && freq < F_start[i]) {
			note = 'e';
		} else if (freq >= F_start[i] && freq < Fsharp_start[i]) {
			note = 'f';
		} else if (freq >= Fsharp_start[i] && freq < G_start[i]) {
			note = 'n';
		} else if (freq >= G_start[i] && freq < Gsharp_start[i]) {
			note = 'g';
		} else if (freq >= Gsharp_start[i] && freq < A_start[i]) {
			note = 'o';
		} else if (freq >= A_start[i] && freq < Asharp_start[i]) {
			note = 'a';
		} else if (freq >= Asharp_start[i] && freq < B_start[i]) {
			note = 'p';
		} else if (freq >= B_start[i] && freq < B_end[i]) {
			note = 'b';
		} else {
			// do nothing
		}
	}

	return note;
}
